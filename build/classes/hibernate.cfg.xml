<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-configuration PUBLIC
		"-//Hibernate/Hibernate Configuration DTD 3.0//EN"
		"http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd">
<!-- Estes são elementos de propriedade de configuração do Hibernate, um 
	framework de mapeamento objeto-relacional para Java. Cada propriedade define 
	uma configuração diferente para o comportamento do Hibernate. Aqui está uma 
	descrição das propriedades específicas: hibernate.dialect: Especifica o dialeto 
	de banco de dados a ser usado pelo Hibernate. Neste exemplo, o Hibernate 
	usará o dialeto do PostgreSQL. hibernate.connection.datasource: Especifica 
	a fonte de dados a ser usada pela conexão Hibernate. Neste exemplo, a fonte 
	de dados é especificada como "java:/comp/env/jdbc/datasouce". hibernate.default_schema: 
	Especifica o esquema padrão que o Hibernate usará para mapear as tabelas. 
	Neste exemplo, o esquema padrão é "public". hibernate.current_session_context_class: 
	Especifica o contexto da sessão atual a ser usado pelo Hibernate. Neste exemplo, 
	o contexto da sessão atual é "thread". hibernate.transaction.factory_class: 
	Especifica a fábrica de transações a ser usada pelo Hibernate. Neste exemplo, 
	a fábrica de transações é especificada como "org.hibernate.transaction.JDBCTransactionFactory". 
	hibernate.jdbc.factory_class: Especifica a fábrica de conexões JDBC a ser 
	usada pelo Hibernate. Neste exemplo, a fábrica de conexões JDBC é especificada 
	como "org.hibernate.jdbc.NonBatchingBatcherFactory". hibernate.jdbc.batch_size: 
	Especifica o tamanho do lote para operações JDBC. Neste exemplo, o tamanho 
	do lote é 100. hibernate.cache.use_second_level_cache: Especifica se o cache 
	de segundo nível será usado pelo Hibernate. Neste exemplo, o cache de segundo 
	nível está habilitado. hibernate.transaction.auto_close_session: Especifica 
	se a sessão do Hibernate será fechada automaticamente após a conclusão da 
	transação. Neste exemplo, a sessão será fechada automaticamente. hibernate.hbm2ddl.auto: 
	Especifica a ação a ser tomada pelo Hibernate sobre o banco de dados durante 
	o mapeamento. Neste exemplo, a opção " -->



<hibernate-configuration>
	<session-factory name="sessionFactory">
		<property name="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</property>
		<property name="hibernate.connection.datasource">java:/comp/env/jdbc/datasource</property>
		<property name="hibernate.default_schema">public</property>
		<property name="hibernate.current_session_context_class">thread</property>
		<property name="hibernate.transaction.factory_class">org.hibernate.transaction.JDBCTransactionFactory</property>
		<property name="hibernate.jdbc.factory_class">org.hibernate.jdbc.NonBatchingBatcherFactory</property>
		<property name="hibernate.jdbc.batch_size">100</property>
		<property name="hibernate.cache.use_second_level_cache">true</property>
		<property name="hibernate.transaction.auto_close_session">true</property>
		<property name="hibernate.hbm2ddl.auto">none</property>
		<property name="hibernate.show_sql">false</property>
		<property name="hibernate.format_sql">true</property>
		<property name="hibernate.generate_statistics">false</property>
		<property name="hibernate.use_sql_comments">false</property>
		<property name="hibernate.connection.autocommit">false</property>
		<property name="hibernate.connection.pool_size">50</property>



		<mapping class="br.com.project.model.classes.Entidade" />

		<listener
			class="org.hibernate.envers.event.AuditEventListener"
			type="post-update" />
		<listener
			class="org.hibernate.envers.event.AuditEventListener"
			type="post-delete" />
		<listener
			class="org.hibernate.envers.event.AuditEventListener"
			type="post-insert" />
		
		
		<listener
			class="org.hibernate.envers.event.AuditEventListener"
			type="post-collection-recreate" />
		
		<listener
			class="org.hibernate.envers.event.AuditEventListener"
			type="pre-collection-update" />
		
		<listener
			class="org.hibernate.envers.event.AuditEventListener"
			type="pre-collection-remove" />
	</session-factory>
</hibernate-configuration>
